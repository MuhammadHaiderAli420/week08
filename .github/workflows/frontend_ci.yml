name: Frontend CI - Build & Push Image

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "frontend/**"
      - ".github/workflows/frontend_ci.yml"

env:
  # From repo secrets (Settings → Secrets and variables → Actions)
  ACR_NAME: ${{ secrets.ACR_NAME }}                 # e.g. s223121256acr5804 (NO .azurecr.io)
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }} # e.g. s223121256acr5804.azurecr.io
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  build_and_push_frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Failsafe: if ACR_NAME isn't set, derive it from the login server (strip domain)
      - name: Derive ACR_NAME if empty
        run: |
          if [ -z "${ACR_NAME}" ] && [ -n "${ACR_LOGIN_SERVER}" ]; then
            DERIVED="$(echo "${ACR_LOGIN_SERVER}" | cut -d. -f1)"
            echo "ACR_NAME=${DERIVED}" >> $GITHUB_ENV
            echo "Using derived ACR_NAME=${DERIVED}"
          fi

      # IMPORTANT: --name expects the registry *name* (no domain)
      - name: Login to Azure Container Registry
        run: az acr login --name ${{ env.ACR_NAME }}

      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.IMAGE_TAG }} ./frontend/
          docker push ${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.IMAGE_TAG }}
          # also keep a 'latest' tag
          docker tag  ${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.IMAGE_TAG }} ${{ env.ACR_LOGIN_SERVER }}/frontend:latest
          docker push ${{ env.ACR_LOGIN_SERVER }}/frontend:latest

      - name: Logout from Azure
        if: always()
        run: az logout
